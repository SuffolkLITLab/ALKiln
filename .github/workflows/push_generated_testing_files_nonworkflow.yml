name: Push files generated to implement integrated tests

# Workflow triggered manually with input variables
on: 
  workflow_dispatch:
    inputs:
      destination_repo:
        description: 'user_name/repo_name where the files will be pushed'
        default: ''
        required: true
      branch:
        description: 'Name of branch to push to on repo'
        default: 'main'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  push-all:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: creates test output
        run:  sh ./pushing_testing_files/build_test_boilerplate.sh
      - name: Pushes test output to another repository
        uses: plocket/push-generated-file@master
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }}
          source_file_path: 'output'
          destination_repo: ${{ github.event.inputs.destination_repo }}
          destination_folder: 'folder_test'
          target_branch: ${{ github.event.inputs.branch }}
      
      - name: Create gitignore
        run:  sh ./pushing_testing_files/gitignore.sh
      - name: Push gitignore
        uses: plocket/push-generated-file@master
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }}
          source_file_path: 'gitignore'
          destination_repo: ${{ github.event.inputs.destination_repo }}
          destination_folder: ''
          target_branch: ${{ github.event.inputs.branch }}
      
      - name: Find replace in package_json
        env:
          DESTINATION: ${{ github.event.inputs.destination_repo }}
        run:  sh ./pushing_testing_files/package_json.sh
      - name: Puch package_json
        uses: plocket/push-generated-file@master
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }}
          source_file_path: 'package_json'
          destination_repo: ${{ github.event.inputs.destination_repo }}
          destination_folder: 'different/nested_folder'
          target_branch: ${{ github.event.inputs.branch }}
      
